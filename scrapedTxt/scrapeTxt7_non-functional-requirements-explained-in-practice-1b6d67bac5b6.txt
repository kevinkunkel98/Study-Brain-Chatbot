Yaroslav DobroskokFollow--ListenShareProbably youve heard about non-functional requirements (aka NFRs) before. I have also encountered this concept several times at the beginning of my path. However, when someone explained to me what the non-functional requirements are  it seemed understandable, but still unclear:OK, so what? Should I use them in my daily work somehow or is it just a theoretical thing to know? And it took several years of experience for me to come up with the answer. Heres the definition:If you think of functional requirements as those that define what a system is supposed to do, non-functional requirements (NFRs) define constraints which affect how the system should do it.It is much easier to understand the non-functional requirements (NFRs) through comparison with functional requirements. Lets compare.Functional Requirements Examples:Non-Functional Requirements Examples:So, what we see here is that NFRs are the requirements that cover the Quality Attributes (-ities).Heres the list of the most popular quality attributes for the software systems:You can find the full list of quality attributes here.Who is responsible for writing the NFRs?Usually, the Software Architect is responsible for defining the NFRs. Together with the customer, business analyst, UX designer, and technical lead they should come up with a reasonable list of the NFRs.Should the functional requirements depend on the NFRs?Definitely. You can think of NFRs as a Constitution and the FRs as laws. Each functional requirement should be written in a way to not contradict any of the NFRs.Should the NFRs be tested?Yes, NFRs definitely should be tested. Despite testing all the NFRs together with the functional features testing is ideal  it is always too much time-consuming in practice. So the best choice here could be to create a regular process of non-functional testing. For example, right after the regression testing or once in a period (month, quarter, year).How to accelerate Non-functional testing?Of course, non-functional testing is much easier when most of its part is automated. Think creatively and write automated tests to check whether NFRs are fulfilled. It saves a huge amount of time providing the guarantee that in the end, you receive a high-quality product. Thank you for your reading. I hope this article inspired you to improve the non-functional requirements in your project. Please share this story if you think it is useful and follow me to be the first to receive the next stories.Further Reading:www.altexsoft.comwww.perforce.com---- Lead Software Enginner  Writing about tech, productivity and curious thingsYaroslav Dobroskok--6Yaroslav Dobroskok--10Yaroslav Dobroskok--Yaroslav Dobroskok--Redd--1Love SharmainByteByteGo System Design Alliance--53Vijini MallawaarachchiinTowards Data Science--127Bhargav Sangani--Tanmanydeo--Chameera DulangainBits and Pieces--1HelpStatusWritersBlogCareersPrivacyTermsAboutText to speechTeams